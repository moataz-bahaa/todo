{"version":3,"sources":["redux/actions.js","components/Todos.js","components/TodoItem.js","components/DisplayTodos.js","App.js","reportWebVitals.js","redux/index.js","redux/middleWare.js","redux/reducer.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","UPDATE_TODO","SET_COMPLETE","connect","dispatch","addItem","obj","type","todo","useState","setTodo","className","onSubmit","ev","preventDefault","alert","id","Math","floor","random","complete","placeholder","value","onChange","target","motion","button","whileHover","scale","whileTap","TodoItem","item","deleteItem","updateItem","completeTodo","inputRef","useRef","li","initial","x","transition","duration","animate","exit","opacity","backgroundColor","ref","disabled","defaultValue","onKeyPress","which","current","update","onClick","focus","style","color","state","todos","removeTodo","updateTodo","setComplete","sort","setSort","AnimatePresence","length","map","App","h1","y","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleWare","applyMiddleware","store","next","action","console","group","log","returnValue","getState","groupEnd","reducer","combineReducers","filter","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6bf7bb1.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const SET_COMPLETE = 'SET_COMPLETE';\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    todo\r\n  }\r\n}\r\n\r\nexport const removeTodo = (id) => {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    id\r\n  }\r\n}\r\n\r\nexport const updateTodo = (id, value) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    id,\r\n    value\r\n  }\r\n}\r\n\r\nexport const setComplete = (id) => {\r\n  return {\r\n    type: SET_COMPLETE,\r\n    id\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../redux/actions';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addItem: (obj) => dispatch(addTodo(obj))\r\n  }\r\n}\r\n\r\n\r\nconst Todos = ({ addItem }) => {\r\n\r\n  const [todo, setTodo] = useState('');\r\n\r\n  const handleChange = (ev) => {\r\n    setTodo(ev.target.value);\r\n  }\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    if (todo === '') {\r\n      return alert('Input Is Empty');\r\n    }\r\n    addItem({\r\n      id: Math.floor(Math.random() * 10000),\r\n      todo,\r\n      complete: false\r\n    });\r\n    setTodo('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todos\">\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"todo-input\"\r\n            placeholder=\"Enter Your Task\"\r\n            value={todo}\r\n            onChange={handleChange}\r\n          />\r\n          <motion.button\r\n            type=\"submit\"\r\n            className=\"add-btn\"\r\n            whileHover={{scale: 1.15}}\r\n            whileTap={{scale: 0.8}}\r\n          ><GoPlus /></motion.button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Todos);\r\n","import React, { useRef } from 'react';\r\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai';\r\nimport { IoCheckmarkDoneSharp } from 'react-icons/io5';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst TodoItem = ({ item, deleteItem, updateItem, completeTodo }) => {\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  const update = (ev, id, value) => {\r\n    if (ev.which === 13) {\r\n      updateItem(id, value);\r\n      inputRef.current.disabled = true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.li\r\n      initial={{x: '100%'}}\r\n      transition={{type: 'spring', duration: 0.7}}\r\n      animate={{x: 0}}\r\n      whileHover={{\r\n        scale: 0.9,\r\n        transition: { type: 'spring', duration: 0.3}\r\n      }}\r\n      exit={{x: '-100%', opacity: 0, backgroundColor: 'red'}}\r\n      className=\"card\"\r\n    >\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.todo}\r\n        onKeyPress={(ev) => update(ev, item.id, inputRef.current.value)}\r\n      />\r\n      <div className=\"btns\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.2 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={changeFocus}>\r\n          <AiFillEdit />\r\n        </motion.button>\r\n        {item.complete === false && (\r\n          <motion.button\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            onClick={() => completeTodo(item.id)}\r\n            style={{ color: 'green' }}\r\n          >\r\n            <IoCheckmarkDoneSharp />\r\n          </motion.button>\r\n        )}\r\n        <motion.button\r\n          whileHover={{ scale: 1.2 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => deleteItem(item.id)}\r\n          style={{ color: 'crimson' }}\r\n        >\r\n          <AiFillDelete />\r\n        </motion.button>\r\n      </div>\r\n      {item.complete && <span className=\"complete\">done</span>}\r\n    </motion.li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;","import { AnimatePresence } from 'framer-motion';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeTodo, setComplete, updateTodo } from '../redux/actions';\r\nimport TodoItem from './TodoItem';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteItem: (id) => dispatch(removeTodo(id)),\r\n    updateItem: (id, item) => dispatch(updateTodo(id, item)),\r\n    completeTodo: (id) => dispatch(setComplete(id))\r\n  }\r\n}\r\n\r\nconst DisplayTodos = ({ todos, deleteItem, updateItem, completeTodo }) => {\r\n\r\n  const [sort, setSort] = useState('active');\r\n\r\n  return (\r\n    <div className=\"display-todos\">\r\n      <div className=\"buttons\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort('active')}\r\n        >\r\n          Active\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort('complete')}\r\n        >\r\n          Complete\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort('all')}\r\n        >\r\n          All\r\n        </motion.button>\r\n      </div>\r\n      <ul>\r\n        <AnimatePresence>\r\n          {\r\n            todos.length > 0 && sort === 'active'\r\n              ? todos.map((item) => {\r\n                return item.complete === false && (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    deleteItem={deleteItem}\r\n                    updateItem={updateItem}\r\n                    completeTodo={completeTodo}\r\n                  />\r\n                )\r\n              })\r\n              :\r\n              sort === 'complete'\r\n                ?\r\n                todos.map((item) => {\r\n                  return item.complete === true && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      deleteItem={deleteItem}\r\n                      updateItem={updateItem}\r\n                      completeTodo={completeTodo}\r\n                    />\r\n                  )\r\n                })\r\n                :\r\n                todos.map((item) => (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    deleteItem={deleteItem}\r\n                    updateItem={updateItem}\r\n                    completeTodo={completeTodo}\r\n                  />\r\n                ))\r\n          }\r\n        </AnimatePresence>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);","import './css/main.css'\nimport Todos from './components/Todos';\nimport DisplayTodos from './components/DisplayTodos';\nimport { motion } from 'framer-motion';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <motion.h1\n        initial={{y: -200}}\n        animate={{y: 0}}\n        transition={{duration: 0.6, type: 'spring'}}\n        className=\"todo-app\"\n      >\n        Todo App\n      </motion.h1>\n      <motion.div\n        initial={{y: 200}}\n        transition={{duration: 1, type: 'spring'}}\n        animate={{y: 0}}\n      >\n        <Todos />\n        <DisplayTodos />\n      </motion.div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { logger } from \"./middleWare\";\r\nimport { todos } from \"./reducer\";\r\nimport {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from \"redux\";\r\n\r\nconst middleWare = applyMiddleware(logger);\r\n\r\nconst reducer = combineReducers({\r\n  todos\r\n});\r\n\r\nconst store = createStore(reducer, middleWare);\r\nexport default store;","export const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n    console.log('action:', action);\r\n    const returnValue = next(action);\r\n    console.log('new state:', store.getState());\r\n  console.groupEnd();\r\n  return returnValue;\r\n}","import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  UPDATE_TODO,\r\n  SET_COMPLETE\r\n} from \"./actions\";\r\n\r\nexport const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.todo];\r\n    case REMOVE_TODO:\r\n      return state.filter((item) => item.id !== action.id);\r\n    case UPDATE_TODO:\r\n      return state.map((item) => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            ...item,\r\n            todo: action.value\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    case SET_COMPLETE:\r\n      return state.map((item) => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            ...item,\r\n            complete: true\r\n          }\r\n        }\r\n        return item;\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}